image: docker:latest

services:
- docker:dind
- maven
- mysql:5.7

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  SPRING_DATASOURCE_URL: jdbc:mysql://localhost/reCollect?createDatabaseIfNotExist=true&serverTimezone=Europe/London&useSSL=false
  MYSQL_DATABASE: "reCollect"
  MYSQL_USER: "adminrc"
  MYSQL_PASSWORD: "admin"
  MYSQL_ROOT_PASSWORD: "admin"
    
before_script:
  - cd ReCollect/

stages:
  - connect
  - connectVM
  - build
  - buildVM
  - test
  - testVM
  - package
  - packageVM
  - deployVM


connect:
  stage: connect
  variables:
    DOCKER_DRIVER: overlay2
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql/reCollect?createDatabaseIfNotExist=true&serverTimezone=Europe/London&useSSL=false
  services:
    - mysql:5.7
  before_script:
    - apk --no-cache add mysql-client
    - mysql --version
  except:
    - master
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql "${MYSQL_DATABASE}"


connectVM:
  stage: connectVM
  tags:
    - vmonly
  services:
    - mysql:5.7
  before_script:
    - sudo apt install -y mysql-client
    - sudo apt install -y mysql-server
    - mysql --version
  only:
    - master
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" "${MYSQL_DATABASE}"

build:
  image: maven
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql/reCollect?createDatabaseIfNotExist=true&serverTimezone=Europe/London&useSSL=false
  services:
    - mysql:5.7
  except:
    - master
  script:
    - mvn clean compile

buildVM:
  image: maven
  stage: buildVM
  tags:
    - vmonly
  services:
    - mysql:5.7
  only:
    - master
  script:
    - mvn clean compile

test:
  image: maven
  stage: test
  variables:
    DOCKER_DRIVER: overlay2
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql/reCollect?createDatabaseIfNotExist=true&serverTimezone=Europe/London&useSSL=false
  services:
    - mysql:5.7
  except:
    - master
  script:
    - mvn clean test -Dtest=\!\*SeleniumTest

testVM:
  image: maven
  stage: testVM
  tags:
    - vmonly
  services:
    - mysql:5.7
  only:
    - master
  script:
    - mvn clean test -Dtest=\!\*SeleniumTest

package:
  image: maven
  stage: package
  variables:
    DOCKER_DRIVER: overlay2
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql/reCollect?createDatabaseIfNotExist=true&serverTimezone=Europe/London&useSSL=false
  services:
    - mysql:5.7
  except:
    - master
  script:
    - mvn clean package -Dmaven.test.skip=true

packageVM:
  image: maven
  tags:
    - vmonly
  stage: packageVM
  services:
    - mysql:5.7
  only:
    - master
  script:
    - mvn clean package -Dmaven.test.skip=true
  artifacts:
    paths:
      - ReCollect/target/*.jar

deployVM:
  image: docker
  stage: deployVM
  tags:
    - vmonly
  services:
    - mysql:5.7
    - docker:dind
    - maven
  only:
    - master
  script:
    - docker-compose up -d --build --force-recreate


sonarcloud-check:
  image: maven:3.6.3-jdk-11
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify -DskipTests sonar:sonar 
  only:
    - merge_requests
    - master


